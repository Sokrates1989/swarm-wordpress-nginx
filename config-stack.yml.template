version: "3.9"

services:
  db:
    image: mysql:8.0
    volumes:
      - ${DATA_ROOT}/db_data:/var/lib/mysql
    networks:
      - wordpress_test_backend
    secrets:
      - "MYSQL_ROOTPW_WORDPRESS_PLACEHOLDER"
      - "MYSQL_USERPW_WORDPRESS_PLACEHOLDER"
    environment:
        MYSQL_ROOT_PASSWORD_FILE: /run/secrets/MYSQL_ROOTPW_WORDPRESS_PLACEHOLDER
        MYSQL_DATABASE: ${MYSQL_DATABASE_NAME}
        MYSQL_USER: ${MYSQL_USER_NAME}
        MYSQL_PASSWORD_FILE: /run/secrets/MYSQL_USERPW_WORDPRESS_PLACEHOLDER
    deploy:
        replicas: 1
        restart_policy:
            condition: on-failure
            delay: 10s
            max_attempts: 10
            window: 15s
        labels:
          - "traefik.enable=false"

  wordpress:
    image: wordpress:6.2.2-php8.0-fpm-alpine
    volumes:
      - ${DATA_ROOT}/wordpress_data:/var/www/html
      - ${DATA_ROOT}/apps/wordpress/php.ini:/usr/local/etc/php/php.ini
    networks:
      - wordpress_test_backend
    ports:
      - "9070:9000"
    secrets:
      - "MYSQL_USERPW_WORDPRESS_PLACEHOLDER"
    environment:
        WORDPRESS_DB_HOST: ${STACK_NAME}_db
        WORDPRESS_DB_USER: ${MYSQL_USER_NAME}
        WORDPRESS_DB_PASSWORD_FILE: /run/secrets/MYSQL_USERPW_WORDPRESS_PLACEHOLDER
        WORDPRESS_DB_NAME: ${MYSQL_DATABASE_NAME}
        WORDPRESS_TABLE_PREFIX: wp_
        # To handle subdomains.
        WORDPRESS_CONFIG_EXTRA: |
          define('WP_SITEURL', 'https://${HOMEPAGE_URL}');
          define('WP_HOME', 'https://${HOMEPAGE_URL}');
    deploy:
        mode: replicated
        replicas: ${WORDPRESS_REPLICAS}
        update_config:
            parallelism: 1
            delay: 5s
            order: start-first
        restart_policy:
            condition: any
            delay: 10s
            max_attempts: 10
            window: 15s
        labels:
            - "traefik.enable=false"

  nginx:
    image: iiriix/nginx-wp:1.18
    volumes:
      - ${DATA_ROOT}/apps/nginx/nginx_conf/nginx.conf:/etc/nginx/nginx.conf
      - ${DATA_ROOT}/apps/nginx/nginx_conf/conf.d/default.conf:/etc/nginx/conf.d/default.conf
      - ${DATA_ROOT}/wordpress_data:/var/www/html
      - ${DATA_ROOT}/nginx_cache:/var/cache/nginx
    networks:
      - wordpress_test_backend
      - traefik
    deploy:
        mode: replicated
        replicas: ${NGINX_REPLICAS}
        update_config:
            parallelism: 1
            delay: 5s
            order: start-first
        restart_policy:
            condition: any
            delay: 10s
            max_attempts: 10
            window: 15s
        labels:
          - traefik.enable=true
          - traefik.constraint-label=traefik-public
          - traefik.docker.network=${TRAEFIK_NETWORK_NAME}
          - traefik.http.routers.${STACK_NAME}_wordpress.service=${STACK_NAME}_wordpress
          - traefik.http.services.${STACK_NAME}_wordpress.loadbalancer.server.port=80
          - traefik.http.routers.${STACK_NAME}_wordpress.rule=Host(`${HOMEPAGE_URL}`)
          - traefik.http.routers.${STACK_NAME}_wordpress.entrypoints=http,web
          - traefik.http.routers.${STACK_NAME}_wordpress.middlewares=https-redir@docker
          - traefik.http.routers.${STACK_NAME}_wordpress-secure.rule=Host(`${HOMEPAGE_URL}`)
          - traefik.http.routers.${STACK_NAME}_wordpress-secure.entrypoints=https
          - traefik.http.routers.${STACK_NAME}_wordpress-secure.tls=true
          - traefik.http.routers.${STACK_NAME}_wordpress-secure.tls.certresolver=le
          #### Middleware for HTTP to HTTPS redirection
          - traefik.http.middlewares.${STACK_NAME}_https-redir.redirectscheme.scheme=https
          - traefik.http.middlewares.${STACK_NAME}_https-redir.redirectscheme.permanent=true
          # www-redir.
          - "traefik.http.middlewares.${STACK_NAME}_www-redir.redirectregex.regex=^https://www.(.*)"
          - "traefik.http.middlewares.${STACK_NAME}_www-redir.redirectregex.replacement=https://$${1}"
          - "traefik.http.middlewares.${STACK_NAME}_www-redir.redirectregex.permanent=true"
          # Autoscaler:  https://github.com/Sokrates1989/swarm-monitoring-autoscaler?tab=readme-ov-file#usage .
          - "autoscale=${AUTOSCALE_ENABLED}"
          - "autoscale.minimum_replicas=${AUTOSCALE_MINIMUM_REPLICAS}"
          - "autoscale.maximum_replicas=${AUTOSCALE_MAXIMUM_REPLICAS}"
          - "autoscale.cpu_upscale_threshold=${AUTOSCALE_CPU_UPSCALE_THRESHOLD}"
          - "autoscale.cpu_upscale_time_duration=${AUTOSCALE_CPU_UPSCALE_DURATION}"
          - "autoscale.cpu_downscale_threshold=${AUTOSCALE_CPU_DOWNSCALE_THRESHOLD}"
          - "autoscale.cpu_downscale_time_duration=${AUTOSCALE_CPU_DOWNSCALE_DURATION}"

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      - PMA_HOST=${STACK_NAME}_db
    networks:
      - ${TRAEFIK_NETWORK_NAME}
      - wordpress_test_backend
    deploy:
      labels:
        - traefik.enable=true
        - traefik.constraint-label=traefik-public
        - traefik.http.services.${STACK_NAME}_phpmyadmin.loadbalancer.server.port=80
        - traefik.http.routers.${STACK_NAME}_phpmyadmin.rule=Host(`${PHPMYADMIN_URL}`)
        - traefik.http.routers.${STACK_NAME}_phpmyadmin.entrypoints=https,http,web
        - traefik.http.routers.${STACK_NAME}_phpmyadmin.tls=true
        - traefik.http.routers.${STACK_NAME}_phpmyadmin.tls.certresolver=le
      mode: replicated
      replicas: ${PHPMYADMIN_REPLICAS}

networks:
  traefik:
    external: true
  wordpress_test_backend:
    driver: overlay


secrets:
  "MYSQL_ROOTPW_WORDPRESS_PLACEHOLDER":
    external: true
  "MYSQL_USERPW_WORDPRESS_PLACEHOLDER":
    external: true
